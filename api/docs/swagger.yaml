basePath: /api/v1
definitions:
  model.GrMember:
    properties:
      dob:
        description: Dob is the date of birth in YYYY-MM-DD format.
        example: "1985-04-12"
        type: string
      email:
        description: Email is the member's email address.
        example: jane.doe@example.com
        type: string
      f_name:
        description: FirstName is the given name of the GR member.
        example: Jane
        type: string
      gr_id:
        description: GrId is the unique GR member identifier.
        example: GR12345
        type: string
      l_name:
        description: LastName is the family name of the GR member.
        example: Doe
        type: string
      mobile:
        description: Mobile is the contact phone number.
        example: "98765432"
        type: string
    type: object
  model.Otp:
    properties:
      otp:
        description: |-
          Otp is the one‑time password sent to the user.
          example: "123456"
        example: "123456"
        type: string
      otp_expiry:
        description: |-
          OtpExpiry is the Unix timestamp (seconds since epoch) when the OTP expires.
          example: 1744176000
        example: 1744176000
        type: integer
    type: object
  model.User:
    properties:
      burn_pin:
        example: 1234
        type: integer
      country:
        example: SGP
        type: string
      created_at:
        example: "2025-04-19T10:00:00Z"
        type: string
      dob:
        example: "2007-08-05"
        type: string
      email:
        example: user@example.com
        type: string
      external_id:
        example: abc123
        type: string
      external_id_type:
        example: EMAIL
        type: string
      first_name:
        example: Brendan
        type: string
      id:
        example: 42
        type: integer
      last_name:
        example: Test
        type: string
      opted_in:
        example: true
        type: boolean
      phone_numbers:
        description: PhoneNumbers holds zero or more phone numbers associated with
          this user.
        items:
          $ref: '#/definitions/model.UserPhoneNumber'
        type: array
      updated_at:
        example: "2025-04-19T11:00:00Z"
        type: string
    type: object
  model.UserPhoneNumber:
    properties:
      created_at:
        example: "2025-04-19T10:05:00Z"
        type: string
      id:
        example: 101
        type: integer
      phone_number:
        example: "+6598765432"
        type: string
      phone_type:
        example: mobile
        type: string
      preference_flags:
        example: primary
        type: string
      updated_at:
        example: "2025-04-19T10:05:00Z"
        type: string
      user_id:
        example: 42
        type: integer
    type: object
  requests.AuthRequest:
    properties:
      nonce:
        description: A unique random string for each request to prevent replay attacks.
        example: API
        type: string
      signature:
        description: |-
          HMAC-SHA256 signature of "appID|timestamp|nonce" hex-encoded.
          Computed by concatenating the appID, timestamp, and nonce to form a base string,
          then applying HMAC-SHA256 with the secret key and hex-encoding the resulting digest.
        example: 1558850cb1b48e826197c48d6a14c5f3bf4b644bcb0065ceb0b07978296116bc
        type: string
      timestamp:
        description: Unix timestamp (seconds since epoch) when the request was generated.
        example: "1744075148"
        type: string
    required:
    - nonce
    - signature
    - timestamp
    type: object
  requests.Login:
    properties:
      email:
        description: Email address of the user attempting to log in
        example: user@example.com
        type: string
    required:
    - email
    type: object
  requests.Register:
    properties:
      email:
        description: Email address to check for existing registration.
        example: user@example.com
        type: string
    required:
    - email
    type: object
  requests.RegisterGr:
    properties:
      gr_id:
        description: GR system identifier for the member.
        example: GR12345
        type: string
      gr_pin:
        description: PIN code associated with the GR member.
        example: "9876"
        type: string
    required:
    - gr_id
    - gr_pin
    type: object
  requests.RegisterGrCms:
    properties:
      dob:
        description: Dob is the date of birth in YYYY-MM-DD format.
        example: "1985-04-12"
        type: string
      email:
        description: Email is the member's email address.
        example: jane.doe@example.com
        type: string
      f_name:
        description: FirstName is the given name of the GR member.
        example: Jane
        type: string
      gr_id:
        description: GrId is the unique GR member identifier.
        example: GR12345
        type: string
      l_name:
        description: LastName is the family name of the GR member.
        example: Doe
        type: string
      mobile:
        description: Mobile is the contact phone number.
        example: "98765432"
        type: string
      url:
        description: URL to send the registration confirmation link to.
        example: https://example.com/confirm?reg_id=abc123
        type: string
    required:
    - url
    type: object
  requests.UpdateBurnPin:
    properties:
      burn_pin:
        description: BurnPin is the new numeric PIN to set.
        example: 4321
        type: integer
      email:
        description: Email of the user whose burn PIN is being updated.
        example: user@example.com
        type: string
    required:
    - burn_pin
    - email
    type: object
  requests.User:
    properties:
      burn_pin:
        description: BurnPin is the numeric PIN used for burn operations.
        example: 1234
        type: integer
      email:
        description: Email is the user’s email address.
        example: user@example.com
        type: string
      external_id:
        description: ExternalID is the client system’s unique identifier for this
          user.
        example: abc123
        type: string
      external_id_type:
        description: ExternalTYPE describes the type or source of the external ID.
        example: EMAIL
        type: string
      gr_id:
        description: GR_ID is the group or partner system identifier for the user.
        example: GR12345
        type: string
      rlp_id:
        description: RLP_ID is the RLP system identifier for the user.
        example: RLP67890
        type: string
      rws_membership_id:
        description: RWS_Membership_ID is the RWS membership ID assigned to this user.
        example: RWS54321
        type: string
      rws_membership_number:
        description: RWS_Membership_Number is the numeric membership number in the
          RWS system.
        example: 987654
        type: integer
      session_expiry:
        description: SessionExpiry is the Unix timestamp (seconds since epoch) when
          the session token expires.
        example: 1712345678
        type: integer
      session_token:
        description: SessionToken is the login session token issued to the user.
        example: eyJhbGciOiJIUzI1...
        type: string
    type: object
  responses.APIResponse:
    properties:
      data:
        description: |-
          Data holds the response payload. Its type depends on the endpoint:
          e.g. AuthResponse for /auth, LoginResponse for /user/login, etc.
      message:
        description: |-
          Message provides a human‑readable status or result description.
          Example: "user created", "email found"
        example: ""
        type: string
    type: object
  responses.AuthResponse:
    properties:
      access_token:
        description: |-
          AccessToken is the JWT issued to the client for subsequent requests.
          Example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  responses.ErrorResponse:
    properties:
      error:
        description: |-
          Error provides the error detail.
          Example: "invalid json request body"
        example: invalid json request body
        type: string
    type: object
  responses.LoginResponse:
    properties:
      login_session_token:
        description: |-
          LoginSessionToken is the JWT issued after successful authentication.
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
      login_session_token_expiry:
        description: |-
          LoginSessionTokenExpiry is the Unix timestamp (seconds since epoch) when the token expires.
          example: 1744176000
        example: 1744176000
        type: integer
      otp:
        description: |-
          Otp is the one‑time password sent to the user.
          example: "123456"
        example: "123456"
        type: string
      otp_expiry:
        description: |-
          OtpExpiry is the Unix timestamp (seconds since epoch) when the OTP expires.
          example: 1744176000
        example: 1744176000
        type: integer
    type: object
host: localhost:18080
info:
  contact: {}
  description: Endpoints for authentication, login and register
  title: LBE API
  version: "1.0"
paths:
  /auth:
    post:
      consumes:
      - application/json
      description: Validates AppID header and HMAC signature, then returns a JWT access
        token.
      parameters:
      - default: app1234
        description: Client system AppID
        in: header
        name: AppID
        required: true
        type: string
      - description: Authentication request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/responses.AuthResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.APIResponse'
      summary: Generate authentication token
      tags:
      - auth
  /gr/verify:
    post:
      consumes:
      - application/json
      description: Checks if a GR member ID is already registered.
      parameters:
      - description: GR registration check payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RegisterGr'
      produces:
      - application/json
      responses:
        "200":
          description: email registered
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "400":
          description: invalid JSON
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/responses.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Verify GR member existence
      tags:
      - gr
  /grcms/profile/{reg_id}:
    get:
      consumes:
      - application/json
      description: Retrieves a temporarily cached GR CMS profile by registration ID.
      parameters:
      - description: Registration ID
        in: path
        name: reg_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: successful
          schema:
            allOf:
            - $ref: '#/definitions/responses.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.GrMember'
              type: object
        "400":
          description: missing reg_id
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "404":
          description: not found or expired
          schema:
            $ref: '#/definitions/responses.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Get cached GR CMS profile
      tags:
      - grcms
  /grcms/verify:
    post:
      consumes:
      - application/json
      description: Checks if a GR CMS member email is in the system and caches their
        profile for follow‑up.
      parameters:
      - description: GR CMS register payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RegisterGrCms'
      produces:
      - application/json
      responses:
        "200":
          description: email not registered
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "400":
          description: invalid JSON
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "409":
          description: email already registered
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/responses.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Verify and cache GR CMS member
      tags:
      - grcms
  /member/{external_id}:
    get:
      consumes:
      - application/json
      description: Retrieves the profile (including phone numbers) for a given member
        by external_id.
      parameters:
      - description: Member external ID
        in: path
        name: external_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: profile found
          schema:
            allOf:
            - $ref: '#/definitions/responses.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: missing or invalid external_id
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: member not found
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get member profile
      tags:
      - member
    put:
      consumes:
      - application/json
      description: Updates a member’s profile fields (non‐zero values in the JSON
        body).
      parameters:
      - description: Member external ID
        in: path
        name: external_id
        required: true
        type: string
      - description: Profile fields to update
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.User'
      produces:
      - application/json
      responses:
        "200":
          description: update successful
          schema:
            allOf:
            - $ref: '#/definitions/responses.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: invalid input
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
        "404":
          description: member not found
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/responses.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update member profile
      tags:
      - member
  /member/burn-pin:
    put:
      consumes:
      - application/json
      description: Updates the burn PIN for a given email address.
      parameters:
      - description: Email + new burn PIN
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.UpdateBurnPin'
      produces:
      - application/json
      responses:
        "200":
          description: update successful
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "400":
          description: invalid JSON or missing fields
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: update unsuccessful
          schema:
            $ref: '#/definitions/responses.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user burn PIN
      tags:
      - member
  /user/login:
    post:
      consumes:
      - application/json
      description: Validates user email, generates an OTP, emails it, and returns
        the OTP details plus a login session token.
      parameters:
      - description: Login request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/responses.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/responses.LoginResponse'
              type: object
        "400":
          description: invalid JSON
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "404":
          description: email not found
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/responses.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Start login flow via email
      tags:
      - user
  /user/register:
    post:
      consumes:
      - application/json
      description: Registers a new user record in the system.
      parameters:
      - description: User create payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: user created
          schema:
            allOf:
            - $ref: '#/definitions/responses.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: invalid JSON
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/responses.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Create new user
      tags:
      - user
  /user/register/verify:
    post:
      consumes:
      - application/json
      description: Checks if an email is already registered; if not, sends an OTP
        for signup.
      parameters:
      - description: Registration request payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.Register'
      produces:
      - application/json
      responses:
        "200":
          description: email not registered, OTP sent
          schema:
            allOf:
            - $ref: '#/definitions/responses.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/model.Otp'
              type: object
        "400":
          description: invalid JSON
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "409":
          description: email already registered
          schema:
            $ref: '#/definitions/responses.APIResponse'
        "500":
          description: internal error
          schema:
            $ref: '#/definitions/responses.APIResponse'
      security:
      - ApiKeyAuth: []
      summary: Verify email for registration
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    description: Type "Bearer <your-jwt>" to authorize
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
